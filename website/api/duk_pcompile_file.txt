=proto
duk_int_t duk_pcompile_file(duk_context *ctx, duk_uint_t flags, const char *path);

=stack
[ ... ] -> [ ... function! ]  (if success, return value == 0)
[ ... ] -> [ ... err! ]  (if failure, return value != 0)

=summary
<p>Like
<code><a href="#duk_pcompile">duk_pcompile()</a></code>, but the compile input
is given as a filename.  The filename associated with the result function
is <code>path</code> as is.</p>

<div include="path-encoding.html" />

=example
if (duk_pcompile_file(ctx, 0, "test.js") != 0) {
    printf("compile failed: %s\n", duk_safe_to_string(ctx, -1));
} else {
    duk_call(ctx, 0);      /* [ func ] -> [ result ] */
    printf("program result: %s\n", duk_safe_to_string(ctx, -1));
}
duk_pop(ctx);

=tags
compile
nonportable
protected

=introduced
1.0.0
