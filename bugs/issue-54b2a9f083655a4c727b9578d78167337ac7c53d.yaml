--- !ditz.rubyforge.org,2008-03-06/issue 
title: symbol visibility macros
desc: |-
  Add symbol visibility macros to Duktape internals
  
  File-local symbols work fine as they are, but non-file-local symbols are
  now exported to the calling application regardless of whether they are
  Duktape internal symbols or intentionally exposed through the API.
  
  This can be fixed by adding symbol visibility macros to Duktape, so that
  e.g. GCC visibility attributes can be used to hide internal symbols from
  the linker.  A generic solution is not possible because symbol visibility
  control is a compiler specific feature.
type: :task
component: duk
release: v1.2
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-09-12 20:31:12.599739 Z
references: []

id: 54b2a9f083655a4c727b9578d78167337ac7c53d
log_events: 
- - 2014-09-12 20:31:12.979247 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-09-12 20:31:53.998803 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - commented
  - |-
    Once the macros have been defined and applied everywhere in the code base,
    combine_src.py no longer needs to fudge extern/static definitions.  Instead,
    it should probably warn against such occurrences.
- - 2014-12-22 16:20:14.319196 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - assigned to release v1.2 from v1.1
  - ""
