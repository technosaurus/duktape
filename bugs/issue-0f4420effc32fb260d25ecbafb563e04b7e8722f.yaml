--- !ditz.rubyforge.org,2008-03-06/issue 
title: wrap setjmp() function to minimize volatile / variable semantics issues?
desc: ""
type: :task
component: duk
release: v1.1
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :closed
disposition: :wontfix
creation_time: 2014-12-23 10:50:51.866885 Z
references: []

id: 0f4420effc32fb260d25ecbafb563e04b7e8722f
log_events: 
- - 2014-12-23 10:50:52.023942 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-12-23 22:49:44.825955 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - closed with disposition wontfix
  - |-
    This is actually not feasible.  If a setjmp is implemented inside a wrapper
    function that returns after calling setjmp, the stored setjmp state will be
    invalidated by the wrapper returning.
    
    The function where setjmp() is called in must remain active in the callstack
    until longjmp() is called.
