--- !ditz.rubyforge.org,2008-03-06/issue 
title: "platform header possibility: explicit duk_config.h which is built by a config script"
desc: |-
  The current model for feature options, compiler detection, etc is that a
  single header file does all the necessary detection on the fly.  There is
  no need to change Duktape sources or introduce new headers for this to work.
  
  Another model would be to expect a user to provide a ``duk_config.h`` header
  in their include path.  For major platforms, a config script could generate
  the duk_config.h.  For other platforms, a copied and manually edited
  duk_config.h could be used instead.
  
  The upside of this would be that all the platform/compiler detection stuff
  would become external.  Adding new platforms would have no impact on Duktape
  sources at all.
  
  Even with this approach there could be a default duk_config.h which would
  actually do feature detection for common platforms (Linux, Windows, OSX,
  mobile phones).
type: :task
component: duk
release: v2.0
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-10-07 10:32:37.312764 Z
references: []

id: b8d66be953b48a7975b2f12dbc0dd8cdda9103bf
log_events: 
- - 2014-10-07 10:32:37.600706 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-11-07 21:12:56.607063 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - assigned to release v2.0 from v1.1
  - ""
