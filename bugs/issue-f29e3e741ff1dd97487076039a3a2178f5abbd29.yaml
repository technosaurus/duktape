--- !ditz.rubyforge.org,2008-03-06/issue 
title: miscellanous lightfunc cleanups
desc: |-
  * Go through all builtins to see object assumptions
  
    - duk_require_hobject() is a pretty good indicator
  
  * API/Guide documentation improvements
  
    - Guide coercion docs don't discuss plain and object buffer/pointer values
  
    - ToPrimitive() custom coercion description is incorrect for Buffer and
      Pointer objects
  
    - check DefaultValue coercion for buffer, pointer, lightfunc
  
  * Investigate memory usage of e.g. mandel.js with ajduk
  
    - Why is nearly 10 kB freed by Duktape.gc()
  
    - Why is refcounting not releasing this memory?  There shouldn't
      be that much leakage, perhaps function template only?
  
  * Activation 'func' and/or 'tv_func' field
  
    - Perhaps remove 'func' and use 'tv_func' only: memory/code tradeoff, where
      'func' is read through a nasty macro
  
    - Or perhaps make the 'func' property conditional to aggressive memory
      tradeoffs?
  
  * Test CALLER property
  
    - Modifications touch this feature option
  
    - If doesn't work, must document in guide
  
  * Call handling fixes
  
    - Extract helpers to: resolve bound chain, resolve effective this binding
  
    - Use helper from current duk_js_call call sites
  
    - Avoids duplicate resolution when ecma-to-ecma call setup fails
  
  * Check comment
  
    - is duk_hthread.h borrowed comment OK for 'func'?
type: :task
component: duk
release: v1.2
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-12-03 13:02:21.920708 Z
references: []

id: f29e3e741ff1dd97487076039a3a2178f5abbd29
log_events: 
- - 2014-12-03 13:02:22.176591 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
