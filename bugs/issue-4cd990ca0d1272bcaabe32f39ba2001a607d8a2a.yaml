--- !ditz.rubyforge.org,2008-03-06/issue 
title: symbol visibility improvements
desc: |-
  * Improve naming:
  
    - Shorter names
  
    - Rename "external" to "API", which is clearer to end users
  
  * Separate macros for data and function items?  There's already a cosmetic
    case where DUK_EXTERNAL_FUNC is "__declspec(xxx) extern" which is correct
    but the "extern" is only required for data items.
  
  * Remove static/extern hackery from combine_src.py.  It should no longer be
    necessary.
  
  * Add an exposed symbol check into build checks (for gcc).  This should make
    it easier to spot incorrect declarations.
  
  * Naming needs to take into account:
  
    - Declaration vs. definition
  
    - Function vs. data (possibly)
  
    - External (API), internal, local
  
  * Some naming alternatives
  
    - DUK_INTERNAL_DECL, DUK_INTERNAL: current
  
    - DUK_INTFUNC_DECL, DUK_INTFUNC_DEFN
  
    - DUK_IFUNC_DECL, DUK_IFUNC_DEFN
  
    - DUK_DEF_EXTFUNC, DUK_DEC_EXTFUNC
  
    - Other ideas?
  
  * With feature detection rework, remove DUK_OPT_DLL_BUILD and simply make
    the Duktape config header define whatever macros are appropriate
type: :task
component: duk
release: v1.2
reporter: Sami Vaarala <sami.vaarala@iki.fi>
status: :unstarted
disposition: 
creation_time: 2014-10-09 12:49:24.264716 Z
references: []

id: 4cd990ca0d1272bcaabe32f39ba2001a607d8a2a
log_events: 
- - 2014-10-09 12:49:24.536513 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - created
  - ""
- - 2014-11-15 19:10:52.249026 Z
  - Sami Vaarala <sami.vaarala@iki.fi>
  - assigned to release v1.2 from v1.1
  - ""
